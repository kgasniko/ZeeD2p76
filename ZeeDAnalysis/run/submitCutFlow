#!/usr/bin/perl -w
use strict;
use warnings;


my $a;
my $n_file=$ARGV[0];
my $fname=$ARGV[1];
my $jobname=$ARGV[2];
my $i;
my $k;
my $home="/afs/desy.de/user/k/kgasniko/xxl/official_ZeeD/17.2.7.5.20/ZeeD/ZeeDAnalysis/run";
my $file="$home/$fname";
my $jobDir="$home/$jobname";
my $out="/nfs/dust/atlas/user/kgasniko/analysis";
my $publicDir="/afs/desy.de/user/k/kgasniko/public";
my $logDir="$publicDir/$jobname";
my $in;
my $ii;
my $str;
my $fileline;
my $outDir="$out/$jobname";
my $type=0;
my $process;
my $count=0;
my $process_count;
my @names;

my $num_args= $#ARGV+1;
if ($num_args != 3) {
    print "Wrong number of arguments";
    exit;
}


system ("mkdir -p $outDir");
system ("rm $outDir/*");
system ("mkdir -p $jobDir");
system ("rm -rf $jobDir/*");

system ("echo Opening of file $file");
open MYFILE, $file;
$k=0;
$i=0;
$str=<MYFILE>;
chomp($str);
print ($str);

if ($str =~ /.*mc\d*.*/) {
    $type=1;
    system ("echo This is MC data");
}

if ($str =~ /.*data\d*_.*/ || $str=~ /.*TTree_\d+.*/) {
    $type=2;
    system ("echo This is DATA");
}
@names=("enu", "munu", "mumu", "ee");
#$type=2;
if ($type == 2) {
    while ($str) {
        chomp($str);

        system ("touch jobOptions.py");
        open PYFILE, '> jobOptions.py';
        $fileline="ZeeDInputFiles=['$str'";
        print (PYFILE $fileline);

        for ($k=0; ($k<$n_file-1) &&  ($str=<MYFILE>); $k=$k+1 ) {
            chomp($str);
            $fileline=",'$str'";
            print (PYFILE $fileline);
        }
        $fileline="]\n";
        print (PYFILE $fileline);
        close (PYFILE);

        foreach my $n (@names){
            system ("cp jobOptions.py $jobDir/jobOptions_$i\_$n.py ");
            system ("echo ZeeDAnalysisType=\\\"$n\\\" >> $jobDir/jobOptions_$i\_$n.py");
            system ("cat $home/ZeeDAnalysis_jobOptionsCutFlow.py >> $jobDir/jobOptions_$i\_$n.py"); 
            system ("chmod 777 $jobDir/jobOptions_$i\_$n.py ");
        }
        $i=$i+1;
        $str=<MYFILE>;
    }

    system ("echo qsub -t 1-$i jobarr.sh $jobDir $outDir");
    system ("mkdir $jobDir/log");
    foreach my $n(@names){
        system ("qsub -N $jobname -t 1-$i -o $jobDir/log jobarrCutFlow.sh $jobDir $outDir $n");
    }
}

if ($type == 1) {
    system ("mkdir $jobDir/log ");
    $process="";
    while ($str) {
        chomp($str);
        if ($str =~ /.*\.\w*_\w*_([A-Za-z]+[_\w]*)\.merge.*/) {
            my $processNow=$1;
            if (not($processNow eq $process) and not($process eq "")){
                system ("qsub -N $process\_$jobname -t 1-$i -o $jobDir/log mcjobSyst.sh  $jobDir/jobOptions_$process $outDir/out_$process");
                $i=0;
            }
            print "Making job for process $1\n";
            system ("touch jobOptions.py");
            open PYFILE, '> jobOptions.py';
            $process=$processNow;
            $fileline="ZeeDInputFiles=['$str'";
            print (PYFILE $fileline);
            $str=<MYFILE>;
            $count=1;
            chomp($str);
            while ($str && $str =~ /.*_$process\.merge.*/ && $count < $n_file)
            {
                $count=$count+1;
                chomp($str);
                $fileline=",'$str'";
                print (PYFILE $fileline);
                $str=<MYFILE>;
            }
            $fileline="]\n";
            print (PYFILE $fileline);
            close (PYFILE);
            system ("echo ZeeDAnalysisType=\\\"$process\\\" >> jobOptions.py");
            system ("cat $home/ZeeDAnalysis_jobOptionsCutFlow.py >> jobOptions.py"); 
            system ("cp jobOptions.py $jobDir/jobOptions_$process\_$i.py ");
            system ("chmod 777 $jobDir/jobOptions_$process\_$i.py ");
            system ("echo subprocess $process $i");
            $i=$i+1;
        }
    }
    system ("qsub -N $process\_$jobname -t 1-$i -o $jobDir/log mcjobSyst.sh  $jobDir/jobOptions_$process $outDir/out_$process");
}

